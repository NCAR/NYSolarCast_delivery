# DO NOT EDIT THIS FILE - edit the master and reinstall.
#
## NOTE -- SET THE BELOW VARIABLES ACCORDINGLY      
SHELL=/bin/bash
HOME=
PATH=
LD_LIBRARY_PATH=
PYTHONPATH=
UDUNITS2_XML_PATH=


# For details see man 4 crontabs

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed

## NOTE: All times on Cheyenne are in Mountain Local Time, so UTC-dependent processes need to be updated between MDT and MST (sigh)
## MDT cron (UTC-6)



#
# Download the real-time NYMesonet data and run qc
#
4,9,14,19,24,29,34,39,44,49,54,59 * * * * run_chain.py run_download_nymeso_data.py run_nymeso_basic_and_shading_qc.py >& /dev/null  

#
# Average the nymeso data to 15min and convert to nc
#
5,20,35,50 * * * * run_chain.py run_nymeso_15min_avg.py run_nymeso_csv_to_nc.py >& /dev/null 

#
# Convert the Wrf Netcdf to NC input for Statcast and Produce the statcast forecast
#
45 4,5,6,7,8,9,10,11,12,13 * * * run_WrfNetCDF2StatcastNetCDF.py >& /dev/null

#
# Convert the hrrr grib to a usable NC file for blending with WRF
#
45 2,3,4,5,6,7,8,9,10,11,12,13 * * * run_hrrr_grib2nc.py >& /dev/null

#
# Run the NWP HRRR blending
#
48 3,4,5,6,7,8,9,10,11,12,13 * * * run_NWP_grid_blender.py >& /dev/null

#
# Run the Statcast forecast and blend it back in with the NWP blended forecast
#
7,22,37,52 5,6,7,8,9,10,11,12,13 * * * run_chain.py run_ghi_fcst.py run_NWP_Statcast_blender.py >& /dev/null

#
# Run the power conversions
#
# Run the power conversion at distributed sites, do the regional zip power forecast
10 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py distributed 60 >& /dev/null ; run_pct_power_rollup.py >& /dev/null ; run_pct_power_region_rollup.py >& /dev/null  
# Run the power conversion at ProviderA Farms and convert to total power
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_A1 15 >& /dev/null 
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_A2 15 >& /dev/null 
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_A3 15 >& /dev/null
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_A4 15 >& /dev/null
# Run the power conversion at ProviderB Farms and convert to total power
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_B1 15 >& /dev/null
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_B2 15 >& /dev/null 
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_B3 15 >& /dev/null 
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_B4 15 >& /dev/null 
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_B5 15 >& /dev/null
10,25,40,55 5,6,7,8,9,10,11,12,13 * * * run_power_fcst.py Farm_B6 15 >& /dev/null  

11,26,41,56 5,6,7,8,9,10,11,12,13 * * * run_chain.py run_pct_power_to_total_power.py >& /dev/null

#
# Run the day ahead power conversions
#
50 3 * * * run_power_fcst_day_ahead.py distributed 60 >& /dev/null ; run_pct_power_rollup.py >& /dev/null ; run_pct_power_region_rollup.py >& /dev/null 
# Run the power conversion (day ahead) at Provider A farms and convert to total power
50 3 * * * run_power_fcst_day_ahead.py Farm_A1 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_A2 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_A3 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_A4 15 >& /dev/null 
# Run the power conversion (day ahead) at Provider B farms and convert to total power
50 3 * * * run_power_fcst_day_ahead.py Farm_B1 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_B2 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_B3 15 >& /dev/null
50 3 * * * run_power_fcst_day_ahead.py Farm_B4 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_B5 15 >& /dev/null 
50 3 * * * run_power_fcst_day_ahead.py Farm_B6 15 >& /dev/null 

51 3 * * * run_chain.py run_pct_power_to_total_power.py >& /dev/null

#
# Check that files are being produced in a timely manner
#
55 3 * * * run_auto_file_watcher_day_ahead.py >& /dev/null
55 11,12,13 * * * run_auto_file_watcher.py >& /dev/null


